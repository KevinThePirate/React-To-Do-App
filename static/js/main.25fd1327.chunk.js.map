{"version":3,"sources":["components/ExItem.jsx","components/ExList.jsx","components/BaseFilter.jsx","pages/HomePage.jsx","pages/CreateEx.jsx","components/Navbar.jsx","pages/EditEx.jsx","App.js","reportWebVitals.js","index.js"],"names":["ExItem","props","classes","exercise","complete","push","className","join","title","onClick","fetch","id","method","then","onDeleteEx","catch","error","console","log","to","headers","body","JSON","stringify","onToggleEx","details","ExList","exercises","length","map","BaseFilter","onUpdate","current","HomePage","useState","excercises","setExcercises","currentFilter","setCurrentFilter","useEffect","a","response","json","fetchedEx","fetchExcercises","deleteExHandler","patchedEx","filter","excercise","toggleExComplHandler","clonedEx","clickedIndex","findIndex","clickedEx","jsx","newFilter","CreateEx","setExercise","handleChange","event","target","name","value","history","useHistory","onSubmit","preventDefault","newEx","Math","floor","random","type","onChange","maxLength","required","cols","rows","Navbar","activeClassName","EditEx","exId","useParams","data","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8ZAIe,SAASA,EAAOC,GAC7B,IAwBMC,EAAU,CAAC,YAKjB,OAJID,EAAME,SAASC,UACjBF,EAAQG,KAAK,YAIb,sBAAKC,UAAWJ,EAAQK,KAAK,KAA7B,UACE,sBAAKD,UAAU,UAAf,UACE,6BAAKL,EAAME,SAASK,QACpB,sBAAKF,UAAU,UAAf,UACE,wBAAQG,QAlCQ,WACtBC,MAAM,mCAAD,OAAoCT,EAAME,SAASQ,IAAM,CAC5DC,OAAQ,WAEPC,MAAK,WACJZ,EAAMa,WAAWb,EAAME,SAASQ,OAEjCI,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OA2B1B,sBACA,cAAC,IAAD,CAAMG,GAAE,qBAAgBlB,EAAME,SAASQ,GAA/B,SAAR,oBACA,wBAAQF,QA1BQ,WACtBC,MAAM,mCAAD,OAAoCT,EAAME,SAASQ,IAAM,CAC5DC,OAAQ,QACRQ,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEnB,UAAWH,EAAME,SAASC,aAEhDS,MAAK,WACJZ,EAAMuB,WAAWvB,EAAME,SAASQ,OAEjCI,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,gBAAiBF,OAe3C,4BAGJ,qBAAKV,UAAU,UAAf,SACE,4BAAIL,EAAME,SAASsB,e,MCxBZC,MAjBf,SAAgBzB,GAEd,OADAgB,QAAQC,IAAIjB,EAAM0B,WACa,IAA3B1B,EAAM0B,UAAUC,OAAqB,KAEvC,qBAAKtB,UAAU,iBAAf,SACGL,EAAM0B,UAAUE,KAAI,SAAC1B,GAAD,OACnB,cAAC,EAAD,CAEEA,SAAUA,EACVW,WAAYb,EAAMa,WAClBU,WAAYvB,EAAMuB,YAHbrB,EAASQ,U,MCRT,SAASmB,EAAW7B,GACjC,OACE,sBAAKK,UAAU,aAAf,UACE,yBACEG,QAAS,kBAAMR,EAAM8B,SAAS,QAC9BzB,UAA6B,QAAlBL,EAAM+B,QAAoB,SAAW,GAFlD,UAIG,IAJH,WAKW,OAEX,yBACEvB,QAAS,kBAAMR,EAAM8B,SAAS,cAC9BzB,UAA6B,cAAlBL,EAAM+B,QAA0B,SAAW,GAFxD,UAIG,IAJH,YAKY,OAEZ,yBACEvB,QAAS,kBAAMR,EAAM8B,SAAS,YAC9BzB,UAA6B,YAAlBL,EAAM+B,QAAwB,SAAW,GAFtD,UAIG,IAJH,UAKU,UCrBhB,IAgEeC,EAhEE,WACf,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,OAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAKAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,+EAE2B9B,MAAM,mCAFjC,cAEU+B,EAFV,gBAG4BA,EAASC,OAHrC,OAGUC,EAHV,OAII1B,QAAQC,IAAI,gBAAiByB,GAC7BP,EAAcO,GALlB,6GADc,uBAAC,WAAD,wBASdC,KACC,IAEH,IAAMC,EAAkB,SAAClC,GACvB,IAAMmC,EAAYX,EAAWY,QAAO,SAACC,GAAD,OAAeA,EAAUrC,KAAOA,KACpEyB,EAAcU,IAGVG,EAAuB,SAACtC,GAC5BM,QAAQC,IAAI,SAAUP,GACtB,IAAMuC,EAAQ,YAAOf,GACfgB,EAAeD,EAASE,WAAU,SAACJ,GAAD,OAAeA,EAAUrC,KAAOA,KAClE0C,EAAYH,EAASC,GAC3BE,EAAUjD,UAAYiD,EAAUjD,SAChCgC,EAAcc,IAEZI,EACF,cAAC,EAAD,CACE3B,UAAWQ,EACXrB,WAAY+B,EACZrB,WAAYyB,IAoBhB,MAjBsB,cAAlBZ,EACFiB,EACE,cAAC,EAAD,CACE3B,UAAWQ,EAAWY,QAAO,SAACC,GAAD,OAAeA,EAAU5C,YACtDU,WAAY+B,EACZrB,WAAYyB,IAGW,YAAlBZ,IACTiB,EACE,cAAC,EAAD,CACE3B,UAAWQ,EAAWY,QAAO,SAACC,GAAD,OAAgBA,EAAU5C,YACvDU,WAAY+B,EACZrB,WAAYyB,KAKhB,gCACE,cAAC,EAAD,CAAYlB,SAtDY,SAACwB,GAC3BjB,EAAiBiB,IAqD4BvB,QAASK,IACnDiB,M,sBC3DQ,SAASE,IACtB,MAAgCtB,mBAAS,CACvC1B,MAAO,GACPiB,QAAS,KAFX,mBAAOtB,EAAP,KAAiBsD,EAAjB,KAIMC,EAAe,SAACC,GACpBF,EAAY,2BACPtD,GADM,kBAERwD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAGhCC,EAAUC,cAsBhB,OACE,uBAAMC,SAtBe,SAACN,GACtBA,EAAMO,iBACN,IAAMC,EAAQ,CACZ3D,MAAOL,EAASK,MAChBiB,QAAStB,EAASsB,QAClBrB,UAAU,EACVO,GAAIyD,KAAKC,MAAsB,IAAhBD,KAAKE,WAEtBrD,QAAQC,IAAI,UAAWiD,GACvBzD,MAAM,kCAAmC,CACvCE,OAAQ,OACRQ,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU4C,KAEpBtD,MAAK,WACJkD,EAAQ1D,KAAK,YAEdU,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAGhC,UACE,0CACA,uBACE6C,KAAK,QACLU,KAAK,OACLC,SAAUd,EACVI,MAAO3D,EAASK,MAChBiE,UAAU,KACVC,UAAQ,IAEV,4CACA,0BACEb,KAAK,UACLc,KAAK,KACLC,KAAK,KACLd,MAAO3D,EAASsB,QAChB+C,SAAUd,EACVgB,UAAQ,IAEV,qD,MCrDS,SAASG,IACtB,OACE,sBAAKvE,UAAU,WAAf,UACE,cAAC,IAAD,CAASa,GAAG,QAAQ2D,gBAAgB,eAApC,kBAGA,cAAC,IAAD,CAAS3D,GAAG,aAAa2D,gBAAgB,eAAzC,gCCNS,SAASC,IACtB,MAAgC7C,mBAAS,CACvC1B,MAAO,GACPiB,QAAS,KAFX,mBAAOtB,EAAP,KAAiBsD,EAAjB,KAIMC,EAAe,SAACC,GACpBF,EAAY,2BACPtD,GADM,kBAERwD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAKhCkB,EADSC,cACKtE,GACdoD,EAAUC,cAChBzB,qBAAU,WACR7B,MAAM,mCAAD,OAAoCsE,IACtCnE,MAAK,SAAC4B,GACL,OAAOA,EAASC,UAEjB7B,MAAK,SAACqE,GACLzB,EAAY,CACVjD,MAAO0E,EAAK1E,MACZiB,QAASyD,EAAKzD,aAGjBV,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,QAC/B,CAACgE,IAoCJ,OACE,uBAAMf,SAfe,SAACN,GACtBA,EAAMO,iBACNxD,MAAM,mCAAD,OAAoCsE,GAAQ,CAC/CpE,OAAQ,QACRQ,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUpB,KAEpBU,MAAK,WACJkD,EAAQ1D,KAAK,YAEdU,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAGhC,UACE,0CACA,uBACE6C,KAAK,QACLU,KAAK,OACLC,SAAUd,EACVI,MAAO3D,EAASK,MAChBiE,UAAU,KACVC,UAAQ,IAEV,4CACA,0BACEb,KAAK,UACLc,KAAK,KACLC,KAAK,KACLd,MAAO3D,EAASsB,QAChB+C,SAAUd,EACVgB,UAAQ,IAEV,wDC7DSS,MAnBf,WACE,OACE,sBAAK7E,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8E,KAAK,QAAQC,OAAK,EAAzB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,aAAaC,OAAK,EAA9B,SACE,cAAC7B,EAAD,MAEF,cAAC,IAAD,CAAO4B,KAAK,sBAAsBC,OAAK,EAAvC,SACE,cAACN,EAAD,aCPKO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3E,MAAK,YAAkD,IAA/C4E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAD,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.25fd1327.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExItem.css\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ExItem(props) {\n  const performExDelete = () => {\n    fetch(`http://localhost:3111/exercises/${props.exercise.id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        props.onDeleteEx(props.exercise.id);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const performToggleEx = () => {\n    fetch(`http://localhost:3111/exercises/${props.exercise.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ complete: !props.exercise.complete }),\n    })\n      .then(() => {\n        props.onToggleEx(props.exercise.id);\n      })\n      .catch((error) => console.log(\"The Error is \", error));\n  };\n\n  const classes = [\"exercise\"];\n  if (props.exercise.complete) {\n    classes.push(\"complete\");\n  }\n\n  return (\n    <div className={classes.join(\" \")}>\n      <div className=\"actions\">\n        <h4>{props.exercise.title}</h4>\n        <div className=\"buttons\">\n          <button onClick={performExDelete}> Delete </button>\n          <Link to={`/exercises/${props.exercise.id}/edit`}> Edit </Link>\n          <button onClick={performToggleEx}> Toggle </button>\n        </div>\n      </div>\n      <div className=\"detials\">\n        <p>{props.exercise.details}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ExItem from \"./ExItem\";\nimport \"./ExList.css\";\n\nfunction ExList(props) {\n  console.log(props.exercises);\n  if (props.exercises.length === 0) return null;\n  return (\n    <div className=\"exercises-list\">\n      {props.exercises.map((exercise) => (\n        <ExItem\n          key={exercise.id}\n          exercise={exercise}\n          onDeleteEx={props.onDeleteEx}\n          onToggleEx={props.onToggleEx}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default ExList;\n","import React from \"react\";\nimport \"./BaseFilter.css\";\n\nexport default function BaseFilter(props) {\n  return (\n    <nav className=\"filter-nav\">\n      <button\n        onClick={() => props.onUpdate(\"all\")}\n        className={props.current === \"all\" ? \"active\" : \"\"}\n      >\n        {\" \"}\n        View All{\" \"}\n      </button>\n      <button\n        onClick={() => props.onUpdate(\"completed\")}\n        className={props.current === \"completed\" ? \"active\" : \"\"}\n      >\n        {\" \"}\n        Completed{\" \"}\n      </button>\n      <button\n        onClick={() => props.onUpdate(\"pending\")}\n        className={props.current === \"pending\" ? \"active\" : \"\"}\n      >\n        {\" \"}\n        Pending{\" \"}\n      </button>\n    </nav>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ExList from \"../components/ExList\";\nimport BaseFilter from \"../components/BaseFilter\";\n\nconst HomePage = () => {\n  const [excercises, setExcercises] = useState([]);\n  const [currentFilter, setCurrentFilter] = useState(\"all\");\n\n  const updateFilterHandler = (newFilter) => {\n    setCurrentFilter(newFilter);\n  };\n  useEffect(() => {\n    async function fetchExcercises() {\n      try {\n        const response = await fetch(\"http://localhost:3111/exercises\");\n        const fetchedEx = await response.json();\n        console.log(\"we fetched...\", fetchedEx);\n        setExcercises(fetchedEx);\n      } catch (error) {}\n    }\n    fetchExcercises();\n  }, []);\n\n  const deleteExHandler = (id) => {\n    const patchedEx = excercises.filter((excercise) => excercise.id !== id);\n    setExcercises(patchedEx);\n  };\n\n  const toggleExComplHandler = (id) => {\n    console.log(\"id is \", id);\n    const clonedEx = [...excercises];\n    const clickedIndex = clonedEx.findIndex((excercise) => excercise.id === id);\n    const clickedEx = clonedEx[clickedIndex];\n    clickedEx.complete = !clickedEx.complete;\n    setExcercises(clonedEx);\n  };\n  let jsx = (\n    <ExList\n      exercises={excercises}\n      onDeleteEx={deleteExHandler}\n      onToggleEx={toggleExComplHandler}\n    />\n  );\n  if (currentFilter === \"completed\") {\n    jsx = (\n      <ExList\n        exercises={excercises.filter((excercise) => excercise.complete)}\n        onDeleteEx={deleteExHandler}\n        onToggleEx={toggleExComplHandler}\n      />\n    );\n  } else if (currentFilter === \"pending\") {\n    jsx = (\n      <ExList\n        exercises={excercises.filter((excercise) => !excercise.complete)}\n        onDeleteEx={deleteExHandler}\n        onToggleEx={toggleExComplHandler}\n      />\n    );\n  }\n  return (\n    <div>\n      <BaseFilter onUpdate={updateFilterHandler} current={currentFilter} />\n      {jsx}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport \"./CreateExercise.css\";\nimport { useHistory } from \"react-router\";\n\nexport default function CreateEx() {\n  const [exercise, setExercise] = useState({\n    title: \"\",\n    details: \"\",\n  });\n  const handleChange = (event) => {\n    setExercise({\n      ...exercise,\n      [event.target.name]: event.target.value,\n    });\n  };\n  const history = useHistory();\n  const handleCreation = (event) => {\n    event.preventDefault();\n    const newEx = {\n      title: exercise.title,\n      details: exercise.details,\n      complete: false,\n      id: Math.floor(Math.random() * 10000),\n    };\n    console.log(\"new ex:\", newEx);\n    fetch(\"http://localhost:3111/exercises\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newEx),\n    })\n      .then(() => {\n        history.push(\"/home\");\n      })\n      .catch((error) => console.log(error));\n  };\n  return (\n    <form onSubmit={handleCreation}>\n      <label>Title</label>\n      <input\n        name=\"title\"\n        type=\"text\"\n        onChange={handleChange}\n        value={exercise.title}\n        maxLength=\"15\"\n        required\n      />\n      <label>Details</label>\n      <textarea\n        name=\"details\"\n        cols=\"30\"\n        rows=\"10\"\n        value={exercise.details}\n        onChange={handleChange}\n        required\n      ></textarea>\n      <button>Add Exercise</button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nexport default function Navbar() {\n  return (\n    <nav className=\"main-nav\">\n      <NavLink to=\"/home\" activeClassName=\"active-style\">\n        Home\n      </NavLink>\n      <NavLink to=\"/create-ex\" activeClassName=\"active-style\">\n        Create Exercise\n      </NavLink>\n    </nav>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./CreateExercise.css\";\nimport { useHistory, useParams } from \"react-router\";\n\nexport default function EditEx() {\n  const [exercise, setExercise] = useState({\n    title: \"\",\n    details: \"\",\n  });\n  const handleChange = (event) => {\n    setExercise({\n      ...exercise,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const params = useParams();\n  const exId = params.id;\n  const history = useHistory();\n  useEffect(() => {\n    fetch(`http://localhost:3111/exercises/${exId}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setExercise({\n          title: data.title,\n          details: data.details,\n        });\n      })\n      .catch((error) => console.log(error));\n  }, [exId]);\n  /*const handleUpdation = (event) => {\n    event.preventDefault();\n    const newEx = {\n      title: exercise.title,\n      details: exercise.details,\n      complete: false,\n      id: Math.floor(Math.random() * 10000),\n    };\n    console.log(\"new ex:\", newEx);\n    fetch(\"http://localhost:3111/exercises\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newEx),\n    })\n      .then(() => {\n        history.push(\"/home\");\n      })\n      .catch((error) => console.log(error));\n  };*/\n  const handleUpdation = (event) => {\n    event.preventDefault();\n    fetch(`http://localhost:3111/exercises/${exId}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(exercise),\n    })\n      .then(() => {\n        history.push(\"/home\");\n      })\n      .catch((error) => console.log(error));\n  };\n  return (\n    <form onSubmit={handleUpdation}>\n      <label>Title</label>\n      <input\n        name=\"title\"\n        type=\"text\"\n        onChange={handleChange}\n        value={exercise.title}\n        maxLength=\"15\"\n        required\n      />\n      <label>Details</label>\n      <textarea\n        name=\"details\"\n        cols=\"30\"\n        rows=\"10\"\n        value={exercise.details}\n        onChange={handleChange}\n        required\n      ></textarea>\n      <button>Update Exercise</button>\n    </form>\n  );\n}\n","import \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport CreateEx from \"./pages/CreateEx\";\nimport Navbar from \"./components/Navbar\";\nimport EditEx from \"./pages/EditEx\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route path=\"/home\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/create-ex\" exact>\n          <CreateEx />\n        </Route>\n        <Route path=\"/exercises/:id/edit\" exact>\n          <EditEx />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reactDom from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n      <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}